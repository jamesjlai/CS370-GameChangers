Deck class and related functions explained.

Deck is a class of object type Stack<Card>, meant to simulate a deck through Pop() and Push() when discarding and adding cards respectively. For the game, it will first require a Deck to be generated and then will use that Deck to generate cards for hands. After which, when deck or hand data must be used, utilize Systems.Collections Stack and List methods to pop, push, and get needed data.

GetDeck is a class that hosts an array of functions that will be used in generating decks. Functions include DeserializeCards(), CopyCard(), DrawRandomCardWithReplacement(), and CreateRandomDeck
	
	DeserializeCards() initializes a card pool for deck creation by dynamically deserializing from Cards.Json.

	CopyCard() clones a card for needed use.
	
	DrawRandomCardWithReplacement() draws a random card from the list of cards and utilizes CopyCard()
To return a copy of the card.

	CreateRandomDeck() creates a random deck of cards, utilizing the three functions above to draw cards at random from the card pool and push them to the Stack.

The Hand class is a collection of cards organized in the generic List<Card> type.

	DrawFromDeck() will pop the top card in the stack and return the card. If the stack is empty, instead it will print a message saying that the deck is empty.

	DisplayHand() utilizes a string override and converts cards into an output-able string form.